name: Build and Distribute

on:
  push:
    branches:
      - main

jobs:
  build:
    name: build
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.27.3'
    
      - name: Setup Flutter Environment
        run: |
          flutter clean
          flutter pub get 
      
      # 清除 Xcode 缓存
      - name: Clean Xcode Cache
        run: |
          rm -rf ~/Library/Developer/Xcode/DerivedData
          rm -rf ~/Library/Developer/Xcode/iOS\ DeviceSupport
          rm -rf ~/Library/Developer/Xcode/Archives
          rm -rf ~/Library/Developer/Xcode/Products
          
      # 添加 Xcode 版本选择
      - name: Select Xcode 16.2
        run: sudo xcode-select -s /Applications/Xcode_16.2.app
        
      # 设置 CocoaPods
      # - name: Setup CocoaPods
      #   run: |
      #     cd ios
      #     rm -rf Pods
      #     rm -f Podfile.lock
      #     pod install --repo-update
          
      # 添加详细的环境信息调试步骤
      - name: Print Environment Info
        run: |
          echo "============= Environment Variables ============="
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          FLUTTER_ROOT=$(which flutter | xargs dirname | xargs dirname)
          echo "FLUTTER_ROOT: $FLUTTER_ROOT"
          echo "FLUTTER_APPLICATION_PATH: $GITHUB_WORKSPACE"
          echo "Current Directory: $(pwd)"


      - uses: cedvdb/action-flutter-build-ios@v1
        with:
          build-cmd: |
            flutter build ipa --release --export-options-plist=ios/ExportOptions.plist --no-tree-shake-icons
          certificate-base64: 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


          certificate-password: 111111
          
          provisioning-profile-base64: 

          keychain-password: 111111

      # # 添加检查步骤
      - name: 检查构建文件
        run: |
          echo "检查 build/ios/ipa 目录内容："
          ls -la build/ios/ipa/
          echo "检查 build/ios 目录内容："
          ls -la build/ios/

      - name: Archive IPA
        uses: actions/upload-artifact@v4
        with:
          name: release-ipa
          path: build/ios/ipa


      - name: Upload to App Store using altool
        env:
          IPA_PATH: "build/ios/ipa/nicki.ipa"
          APPLE_ID: "zhaojinying@coblesbusiness.shop"
          APP_SPECIFIC_PASSWORD: "vaoi-dyru-wxek-uqab"
        run: |
          xcrun altool --upload-app -f "$IPA_PATH" \
            -t ios \
            -u "$APPLE_ID" \
            -p "$APP_SPECIFIC_PASSWORD" \
            --verbose
